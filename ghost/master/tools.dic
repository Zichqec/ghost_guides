//Searches the start of a string for the requested substring.
//Argument 0 is the source string to search, argument 1 is the substring to search for.
//Returns 1 if true, 0 if false.
//Usage example:
//StartsWith("Testing","Test")
StartsWith
{
	SUBSTR(_argv[0],0,STRLEN(_argv[1])) == _argv[1]
}

//Searches the end of a string for the requested substring.
//Argument 0 is the source string to search, argument 1 is the substring to search for.
//Returns 1 if true, 0 if false.
//Usage example:
//EndsWith("Testing","ing")
EndsWith
{
	SUBSTR(_argv[0],STRLEN(_argv[0]) - STRLEN(_argv[1]),STRLEN(_argv[1])) == _argv[1]
}

emdash
{
	"\f[name,calibri]â€”\f[name,default]"
}

ghostver
{
	"1.0.1"
}

IsEmergencyMode
{
	GETSETTING('coreinfo.mode') == "emergency"
}

FirstError
{
	_errornum = ARRAYSIZE(GETERRORLOG)
	if _errornum >= 2560
	{
		"Too many errors to display, please check the output in the SHIORI log, or Tama. Remember to check the top error first."
	}
	else
	{
		_first = REVERSE(GETERRORLOG)[0]
		
		_path = SPLIT(_first,":")[1]
		_path = CUTSPACE(_path)
		_path = SPLIT(_path,"ghost\master\yaya_lessons\")[1]
		_num = SPLIT(_path,"(")[1]
		_num = SPLIT(_num,")")[0]
		_num = TOINT(_num)
		_path = SPLIT(_path,"(")[0]
		_path = REPLACE(_path,"\","/")
		_error = SPLIT(_first,":")[3]
		_error = CUTSPACE(_error)
		
		if ARRAYSIZE(GETERRORLOG) > 1
		{
			"%(_num) errors found. First error:\n"
		}
		--
		"Error on line %(_num) of file \_?%(_path)\_?:\n""%(_error)"""
	}
}

ListErrors
{
	_errors = IARRAY
	foreach REVERSE(GETERRORLOG); _error
	{
		_path = SPLIT(_error,":")[1]
		_path = CUTSPACE(_path)
		_path = SPLIT(_path,"ghost\master\yaya_lessons\")[1]
		_num = SPLIT(_path,"(")[1]
		_num = SPLIT(_num,")")[0]
		_num = TOINT(_num)
		_path = SPLIT(_path,"(")[0]
		_path = REPLACE(_path,"\","/")
		_error = SPLIT(_error,":")[3]
		_error = CUTSPACE(_error)
		
		_errors ,= "Error on line %(_num) of file \_?%(_path)\_?:\n""%(_error)"""
	}
	_errors
}